name: make

on:
  - workflow_dispatch: {}
  - push:
      tags:
        - [ 0-9 ]+.[0-9]+.[0-9]+*

jobs:

  linux:
    name: Linux
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: npm install
      - run: npm run make -- --platform=linux --arch=x64 --targets=@electron-forge/maker-zip
      - uses: actions/upload-artifact@v4
        with:
          name: linux-x64-zip
          path: out/make/zip/linux/x64/*
          retention-days: 1

  win64:
    name: Windows (x64)
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - run: npm install
      - run: npm run make -- --platform=win32 --arch=x64 --targets=@electron-forge/maker-zip,@electron-forge/maker-squirrel
      - uses: actions/upload-artifact@v4
        with:
          name: win32-x64-zip
          path: |
            out/make/zip/win32/x64/*
          retention-days: 1
      - uses: actions/upload-artifact@v4
        with:
          name: win32-x64-squirrel
          path: |
            out/make/squirrel.windows/x64/*
          retention-days: 1

  release:
    name: Release
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: package.json
      - id: package_json
        run: echo "version=$( jq -r '.version' package.json )" >>"${GITHUB_OUTPUT}"
      - uses: actions/download-artifact@v4
      - run: rm -rf _o && mkdir -p _o
      # prepare linux-x64-zip artifacts
      - run: mv -v "linux-x64-zip/bruno-pdf-linux-x64-${{ steps.package_json.outputs.version }}.zip" "_o/"
      - run: mv -v "linux-x64-zip/RELEASES" "_o/bruno-pdf-linux-x64-${{ steps.package_json.outputs.version }}-RELEASES"
      # prepare win32-x64-squirrel artifacts
      - run: mv -v "win32-x64-squirrel/bruno-pdf-${{ steps.package_json.outputs.version }} Setup.exe" "_o/"
      - run: mv -v "win32-x64-squirrel/bruno_pdf-${{ steps.package_json.outputs.version }}-full.nupkg" "_o/"
      - run: mv -v "win32-x64-squirrel/RELEASES" "_o/bruno-pdf-${{ steps.package_json.outputs.version }}-RELEASES"
      # prepare win32-x64-zip artifacts
      - run: mv -v "win32-x64-zip/bruno-pdf-win32-x64-${{ steps.package_json.outputs.version }}.zip" "_o/"
      - run: mv -v "win32-x64-zip/RELEASES" "_o/bruno-pdf-win32-x64-${{ steps.package_json.outputs.version }}-RELEASES"
      # create the release
      - uses: softprops/action-gh-release@v2
        with:
          files: _o/*
